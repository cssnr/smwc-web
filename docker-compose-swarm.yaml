version: "3.7"

services:
  nginx:
    build:
      context: ./nginx
      network: host
    image: ${REGISTRY_HOST}/shane/smwc-web-nginx:${VERSION}
    deploy:
      mode: global
      resources:
        limits:
          cpus: "2.0"
          memory: 50M
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.routers.STACK_NAME-http.rule=Host(${TRAEFIK_HOST})"
        - "traefik.http.routers.STACK_NAME-http.entrypoints=http"
        - "traefik.http.routers.STACK_NAME-http.middlewares=https-redirect"
        - "traefik.http.routers.STACK_NAME-https.rule=Host(${TRAEFIK_HOST})"
        - "traefik.http.routers.STACK_NAME-https.entrypoints=https"
        - "traefik.http.routers.STACK_NAME-https.tls=true"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.port=80"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.scheme=http"
    volumes:
      - /data/docker/STACK_NAME:/data
    secrets:
      - source: cssnr_basic_http_auth
        target: /etc/nginx/auth.users
    depends_on:
      - app
    networks:
      - traefik-public
      - net-internal

  app:
    build:
      context: ./app
      network: host
    image: ${REGISTRY_HOST}/shane/smwc-web-app:${VERSION}
    env_file: ${ENV_FILE}
    command: "gunicorn smwc_web.wsgi:application -w 2 -b 0.0.0.0:9000"
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:9000/app-health-check/"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      mode: global
      resources:
        limits:
          cpus: "2.0"
          memory: 400M
    volumes:
      - /data/docker/STACK_NAME:/data
    depends_on:
      - redis
    networks:
      - net-internal

  worker:
    image: ${REGISTRY_HOST}/shane/smwc-web-app:${VERSION}
    env_file: ${ENV_FILE}
    command: "celery -A smwc_web worker -l INFO -c 2"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 250M
    volumes:
      - /data/docker/STACK_NAME:/data
    depends_on:
      - app
      - redis
    networks:
      - net-internal

  beat:
    image: ${REGISTRY_HOST}/shane/smwc-web-app:${VERSION}
    env_file: ${ENV_FILE}
    command: "celery -A smwc_web beat -l INFO -S django"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 150M
    depends_on:
      - app
      - redis
    networks:
      - net-internal

  #  flower:
  #    image: mher/flower:1.2
  #    env_file: ${ENV_FILE}
  #    deploy:
  #    replicas: 1
  #    resources:
  #      limits:
  #        cpus: '2.0'
  #        memory: 100M
  #    volumes:
  #      - flower_data:/data
  #    depends_on:
  #      - app
  #      - redis
  #    networks:
  #      - net-internal

  redis:
    image: redis:6-alpine
    command: "redis-server --appendonly yes"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 50M
    volumes:
      - redis_data:/data
    networks:
      - net-internal

secrets:
  cssnr_basic_http_auth:
    external: true

volumes:
  #  data_dir:
  #  flower_data:
  redis_data:

networks:
  traefik-public:
    external: true
  net-internal:
    driver: overlay

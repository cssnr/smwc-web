version: '3.7'

services:
  nginx:
    build:
      context: ./nginx
      network: host
    image: shane-smwc-web-nginx:latest
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.routers.STACK_NAME-http.rule=Host(${TRAEFIK_HOST})"
        - "traefik.http.routers.STACK_NAME-http.entrypoints=http"
        - "traefik.http.routers.STACK_NAME-http.middlewares=https-redirect"
        - "traefik.http.routers.STACK_NAME-https.rule=Host(${TRAEFIK_HOST})"
        - "traefik.http.routers.STACK_NAME-https.entrypoints=https"
        - "traefik.http.routers.STACK_NAME-https.tls=true"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.port=80"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.scheme=http"
    volumes:
      - /data/docker/smwc-web:/data
    secrets:
      - source: cssnr_basic_http_auth
        target: /etc/nginx/auth.users
    ports:
      - "80:80"
    depends_on:
      - app

  app:
    build:
      context: ./app
      network: host
    image: shane-smwc-web-app:latest
    env_file: settings.env
    command: "gunicorn smwc_web.wsgi:application -w 2 -b 0.0.0.0:9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/app-health-check/"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      mode: global
    volumes:
      - /data/docker/smwc-web:/data
    depends_on:
      - redis

  worker:
    image: shane-smwc-web-app:latest
    env_file: settings.env
    command: "celery -A smwc_web worker -l INFO -c 2"
    deploy:
      replicas: 1
    volumes:
      - /data/docker/smwc-web:/data
    depends_on:
      - redis
      - app

  beat:
    image: shane-smwc-web-app:latest
    env_file: settings.env
    command: "celery -A smwc_web beat -l INFO -S django"
    deploy:
      replicas: 1
    depends_on:
      - redis
      - app

  flower:
    image: mher/flower:0.9.5
    env_file: settings.env
    deploy:
      replicas: 1
    volumes:
      - flower_data:/data
    depends_on:
      - redis
      - app

  redis:
    image: redis:6-alpine
    command: "redis-server --appendonly yes"
    deploy:
      replicas: 1
    volumes:
      - redis_data:/data

secrets:
  cssnr_basic_http_auth:
    file: ~/basic_http_auth

volumes:
  data_dir:
  flower_data:
  redis_data:

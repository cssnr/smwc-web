version: "3.7"

services:
  nginx:
    build: ./nginx
    image: shane-smwc-web-nginx:${VERSION:-latest}
    env_file: settings.env
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.routers.STACK_NAME-http.rule=Host(${TRAEFIK_HOST:-})"
        - "traefik.http.routers.STACK_NAME-http.entrypoints=http"
        - "traefik.http.routers.STACK_NAME-http.middlewares=https-redirect"
        - "traefik.http.routers.STACK_NAME-https.rule=Host(${TRAEFIK_HOST:-})"
        - "traefik.http.routers.STACK_NAME-https.entrypoints=https"
        - "traefik.http.routers.STACK_NAME-https.tls=true"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.port=80"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.scheme=http"
    volumes:
      - data_dir:/data
      - ${APP_FILES_STATIC:-./app/static}:/data/static
      - ${APP_FILES:-./app}:/app
    secrets:
      - source: cssnr_basic_http_auth
        target: /etc/nginx/auth.users
    depends_on:
      - app
    ports:
      - "80:80"

  app:
    build: ./app
    image: shane-smwc-web-app:${VERSION:-latest}
    env_file: settings.env
    command: "sh -c 'python manage.py runserver 0.0.0.0:9000'"
    deploy:
      mode: global
    volumes:
      - data_dir:/data
      - ${APP_FILES_STATIC:-./app/static}:/data/static
      - ${APP_FILES:-./app}:/app
    depends_on:
      - redis

  worker:
    image: shane-smwc-web-app:${VERSION:-latest}
    env_file: settings.env
    #    command: "celery -A smwc_web worker -l INFO -c 2"
    command: "watchmedo auto-restart -d /app -p '*.py' -R -- celery -A smwc_web worker -l INFO -c 4"
    deploy:
      replicas: 1
    volumes:
      - data_dir:/data
      - ${APP_FILES:-./app}:/app
    depends_on:
      - app
      - redis

  beat:
    image: shane-smwc-web-app:${VERSION:-latest}
    env_file: settings.env
    command: "celery -A smwc_web beat -l INFO -S django"
    deploy:
      replicas: 1
    volumes:
      - data_dir:/data
    depends_on:
      - app
      - redis

  redis:
    image: redis:6-alpine
    command: "redis-server --appendonly yes"
    deploy:
      replicas: 1
    volumes:
      - redis_data:/data

secrets:
  cssnr_basic_http_auth:
    file: ~/basic_http_auth

volumes:
  data_dir:
  redis_data:
